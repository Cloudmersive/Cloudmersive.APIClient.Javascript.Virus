/**
 * nlpapi
 * The powerful Natural Language Processing APIs let you perform part of speech tagging, entity identification, sentence parsing, and much more to help you understand the meaning of unstructured text.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LanguageDetectionResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/LanguageDetectionResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveNlpApiClient) {
      root.CloudmersiveNlpApiClient = {};
    }
    root.CloudmersiveNlpApiClient.LanguageDetectionApi = factory(root.CloudmersiveNlpApiClient.ApiClient, root.CloudmersiveNlpApiClient.LanguageDetectionResponse);
  }
}(this, function(ApiClient, LanguageDetectionResponse) {
  'use strict';

  /**
   * LanguageDetection service.
   * @module api/LanguageDetectionApi
   * @version 1.1.2
   */

  /**
   * Constructs a new LanguageDetectionApi. 
   * @alias module:api/LanguageDetectionApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the languageDetectionPost operation.
     * @callback module:api/LanguageDetectionApi~languageDetectionPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LanguageDetectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Detect language of text
     * Automatically determine which language a text string is written in.  Supports Danish (DAN), German (DEU), English (ENG), French (FRA), Italian (ITA), Japanese (JPN), Korean (KOR), Dutch (NLD), Norwegian (NOR), Portuguese (POR), Russian (RUS), Spanish (SPA), Swedish (SWE), Chinese (ZHO).
     * @param {String} textToDetect Text to detect language of
     * @param {module:api/LanguageDetectionApi~languageDetectionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LanguageDetectionResponse}
     */
    this.languageDetectionPost = function(textToDetect, callback) {
      var postBody = textToDetect;

      // verify the required parameter 'textToDetect' is set
      if (textToDetect === undefined || textToDetect === null) {
        throw new Error("Missing the required parameter 'textToDetect' when calling languageDetectionPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Apikey'];
      var contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = LanguageDetectionResponse;

      return this.apiClient.callApi(
        '/nlp/language/detect', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
